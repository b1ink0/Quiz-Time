{"version":3,"sources":["firebase.js","context/AuthContext.js","context/StateContext.js","components/quizs/Question.js","components/quizs/Quiz.js","components/auth/media/logoT.svg","components/dashboard/Dashboard.js","components/auth/LogIn.js","components/auth/LogInPage.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","googleProvider","GoogleAuthProvider","firestore","database","users","collection","quizs","answers","results","quizShare","getCurrentTimeStamp","FieldValue","serverTimestamp","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","logIn","signInWithPopup","then","catch","error","console","log","logOut","signOut","Provider","StateContext","useStateContext","StateProvider","logInCheck","setLogInCheck","profileExist","setProfileExist","quizExist","setQuizExist","qNo","setQNo","quiz","setQuiz","quizName","setQuizName","displayQuiz","setDisplayQuiz","quizComplete","setQuizComplete","quizGiven","setQuizGiven","tempAnswer","setTempAnswer","quizShareAnswerName","setQuizShareAnswerName","quizShareName","setQuizShareName","quizShareResultName","setQuizShareResultName","score","setScore","userScore","setUserScore","totalScore","setTotalScore","quizAnswer","tempQuizAnswer","setTempQuizAnswer","Question","arr","undefined","map","a","push","answer","handleSelection","e","forEach","parseInt","target","name","tempA","q","temp","onSubmit","preventDefault","handleSubmit","className","type","onChange","required","b","c","d","Quiz","com","doc","get","exists","data","count","quizAnswerContainer","quizResultContainer","submissions","uid","length","condition","r","update","handleScore","Dashboard","setError","firstName","setFirstName","middleName","setMiddleName","lastName","setLastName","username","setUsername","email","setEmail","handleLogOut","quizShareContainer","quizAnswerName","quizResultName","quizContainer","src","logo","alt","onClick","match","set","fullName","window","location","reload","minLength","maxLength","LogIn","handleLogIn","LogInPage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ea81da1.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth()\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider()\r\nexport const signInWithGoogle = () => {\r\n    auth.signInWithPopup(googleProvider)\r\n        .then()\r\n        .catch((error)=> console.log(error))\r\n}\r\nexport const firestore = app.firestore()\r\nexport const database = {\r\n    users: firestore.collection('users'),\r\n    quizs: firestore.collection('quizs'),\r\n    answers: firestore.collection(\"answers\"),\r\n    results: firestore.collection('results'),\r\n    quizShare: firestore.collection('quizShare'),\r\n    getCurrentTimeStamp : firebase.firestore.FieldValue.serverTimestamp\r\n}","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { auth, signInWithGoogle } from \"../firebase\";\r\n\r\n// Creating Context\r\nconst AuthContext = React.createContext();\r\n\r\n// Using Created Context a\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\n// Creating Provider\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const logIn = () => {\r\n    return signInWithGoogle();\r\n  };\r\n  const logOut = () => {\r\n    return auth.signOut();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setCurrentUser(user);\r\n        setLoading(false);\r\n      } else setLoading(false);\r\n    });\r\n    return unsubscribe;\r\n  });\r\n  const value = {\r\n    currentUser,\r\n    logIn,\r\n    logOut,\r\n  };\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}","import React, { useContext, useState } from 'react'\r\n\r\nconst StateContext = React.createContext()\r\n\r\nexport const useStateContext = () => {\r\n    return useContext(StateContext)\r\n}\r\n\r\nexport const StateProvider = ( { children } ) => {\r\n    const [logInCheck, setLogInCheck] = useState(false)\r\n    const [profileExist, setProfileExist] = useState(true)\r\n    const [quizExist, setQuizExist] = useState(false)\r\n    const [qNo, setQNo] = useState(1)\r\n    const [quiz, setQuiz] = useState([])\r\n    const [quizName, setQuizName] = useState(\"\")\r\n    const [displayQuiz, setDisplayQuiz] = useState(true)\r\n    const [quizComplete, setQuizComplete] = useState(false)\r\n    const [quizGiven, setQuizGiven] = useState(true)\r\n    const [tempAnswer, setTempAnswer] = useState([])\r\n    const [quizShareAnswerName, setQuizShareAnswerName] = useState(\"\")\r\n    const [quizShareName, setQuizShareName] = useState(\"\")\r\n    const [quizShareResultName, setQuizShareResultName] = useState(\"\")\r\n    const [score, setScore] = useState(0)\r\n    const [userScore, setUserScore] = useState(0)\r\n    const [totalScore, setTotalScore] = useState(0)\r\n    const [tempQuizAnswer, setTempQuizAnswer] = useState({\r\n        quizAnswer:[]\r\n    })\r\n    const value = {\r\n        logInCheck,\r\n        setLogInCheck,\r\n        profileExist,\r\n        setProfileExist,\r\n        quizExist,\r\n        setQuizExist,\r\n        qNo,\r\n        setQNo,\r\n        quiz,\r\n        setQuiz,\r\n        tempQuizAnswer,\r\n        quizName,\r\n        setQuizName,\r\n        setTempQuizAnswer,\r\n        displayQuiz,\r\n        setDisplayQuiz,\r\n        quizComplete,\r\n        setQuizComplete,\r\n        tempAnswer,\r\n        setTempAnswer,\r\n        score,\r\n        setScore,\r\n        quizShareAnswerName,\r\n        setQuizShareAnswerName,\r\n        quizShareResultName,\r\n        setQuizShareResultName,\r\n        quizShareName,\r\n        setQuizShareName,\r\n        quizGiven,\r\n        setQuizGiven,\r\n        userScore,\r\n        setUserScore,\r\n        totalScore,\r\n        setTotalScore\r\n    }\r\n\r\n    return (\r\n        <StateContext.Provider value={value}>\r\n            {children}\r\n        </StateContext.Provider>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useStateContext } from '../../context/StateContext'\r\n\r\nexport default function Question({quiz}) {\r\n    const { tempAnswer, setTempAnswer, setQuizComplete } = useStateContext()\r\n    const [loading, setLoading] = useState(false)\r\n    let arr = tempAnswer;\r\n    if (arr[0] === undefined){\r\n        quiz.map(a => {\r\n            arr.push({\r\n                qNo: a.qNo,\r\n                answer: \"\"\r\n            })\r\n        })\r\n    }\r\n    const handleSelection = (e) => {\r\n        arr.forEach(a => {\r\n            if (parseInt(e.target.name) === a.qNo){\r\n                let tempA \r\n                quiz.forEach(q => {\r\n                    if (q.qNo === a.qNo){\r\n                        tempA = e.target.value\r\n                    }\r\n                })\r\n                let temp = {\r\n                    qNo: parseInt(e.target.name),\r\n                    answer: tempA\r\n                }\r\n                arr[a.qNo - 1] = temp\r\n            }\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setTempAnswer(arr)\r\n        setQuizComplete(true)\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={ e => handleSubmit(e) }>\r\n            {\r\n                quiz && quiz.map((q) => (\r\n                    <div key={q.qNo} className=\"queCon\">\r\n                        <div className=\"qCon\">\r\n                            <h1>{q.q}</h1>\r\n                        </div>\r\n                        <div className=\"options\">\r\n                            <div className=\"radioBtnCon\">\r\n                                <label>{q.a}</label>\r\n                                <input type=\"radio\" value=\"a\" name={q.qNo} onChange={(e) => handleSelection(e)} required/>\r\n                            </div>\r\n                            <div className=\"radioBtnCon\">\r\n                                <label>{q.b}</label>\r\n                                <input type=\"radio\" value=\"b\" name={q.qNo} onChange={(e) => handleSelection(e)} required/>\r\n                            </div>\r\n                            <div className=\"radioBtnCon\">\r\n                                <label>{q.c}</label>\r\n                                <input type=\"radio\" value=\"c\" name={q.qNo} onChange={(e) => handleSelection(e)} required/>\r\n                            </div>\r\n                            <div className=\"radioBtnCon\">\r\n                                <label>{q.d}</label>\r\n                                <input type=\"radio\" value=\"d\" name={q.qNo} onChange={(e) => handleSelection(e)} required/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { database, firestore } from \"../../firebase\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useStateContext } from \"../../context/StateContext\";\r\nimport Question from \"./Question\";\r\nimport \"./Quiz.scss\";\r\n\r\nexport default function Quiz() {\r\n  const { currentUser } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  const {\r\n    quizExist,\r\n    quiz,\r\n    quizComplete,\r\n    tempAnswer,\r\n    score,\r\n    setScore,\r\n    quizShareName,\r\n    quizShareAnswerName,\r\n    quizShareResultName,\r\n  } = useStateContext();\r\n  const handleScore = (data) => {\r\n    let count = 0;\r\n    data.quizAnswerContainer.quizAnswer.forEach((q) => {\r\n      if (q.answer === tempAnswer[q.qNo - 1].answer) {\r\n        count++;\r\n      }\r\n    });\r\n    setScore(count);\r\n    setLoading(false);\r\n    let com;\r\n    if (currentUser) {\r\n      com = database.results\r\n        .doc(quizShareResultName)\r\n        .get()\r\n        .then((doc) => {\r\n          let arr = doc.data().quizResultContainer.submissions;\r\n          arr.push({\r\n            uid: currentUser.uid,\r\n            quizName: quizShareName,\r\n            userScore: count,\r\n            totalScore: tempAnswer.length,\r\n          });\r\n          if (doc.data().quizResultContainer.submissions[0] !== undefined) {\r\n            let condition = false;\r\n            doc.data().quizResultContainer.submissions.forEach((r) => {\r\n              if (r.uid === currentUser.uid) {\r\n                condition = true;\r\n              }\r\n            });\r\n            console.log(condition);\r\n            if (condition === false) {\r\n              firestore\r\n                .collection(\"results\")\r\n                .doc(quizShareResultName)\r\n                .update({\r\n                  quizResultContainer: {\r\n                    quizName: quizShareName,\r\n                    submissions: arr,\r\n                  },\r\n                });\r\n            }\r\n          } else {\r\n            let condition = false;\r\n            doc.data().quizResultContainer.submissions.forEach((r) => {\r\n              if (r.uid === currentUser.uid) {\r\n                condition = true;\r\n              }\r\n            });\r\n            console.log(condition);\r\n            if (condition === false) {\r\n              firestore\r\n                .collection(\"results\")\r\n                .doc(quizShareResultName)\r\n                .update({\r\n                  quizResultContainer: {\r\n                    quizName: quizShareName,\r\n                    submissions: arr,\r\n                  },\r\n                });\r\n            }\r\n          }\r\n          count = 0;\r\n        });\r\n    }\r\n    return com;\r\n  };\r\n  useEffect(() => {\r\n    let com;\r\n    if (quizComplete) {\r\n      if (currentUser) {\r\n        com = database.answers\r\n          .doc(quizShareAnswerName)\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              handleScore(doc.data());\r\n            }\r\n          });\r\n      }\r\n    }\r\n    return com;\r\n  }, [quizComplete]);\r\n  return (\r\n    <>\r\n      {quizExist && !quizComplete ? (\r\n        <Question quiz={quiz} />\r\n      ) : !quizComplete ? (\r\n        \"Quiz Does Not Exist\"\r\n      ) : (\r\n        !loading && (\r\n          <div className=\"result\">\r\n            {score}/{tempAnswer.length}\r\n            <h1>Quiz has been submited!</h1>\r\n          </div>\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logoT.72657f0b.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { auth, database, firestore } from \"../../firebase\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useStateContext } from \"../../context/StateContext\";\r\nimport \"./Dashboard.scss\";\r\nimport Quiz from \"../quizs/Quiz\";\r\nimport logo from \"../auth/media/logoT.svg\";\r\n\r\nexport default function Dashboard() {\r\n  const [error, setError] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [middleName, setMiddleName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const { currentUser, logOut } = useAuth(\"\");\r\n  const {\r\n    setLogInCheck,\r\n    profileExist,\r\n    setProfileExist,\r\n    setQuiz,\r\n    setQuizExist,\r\n    quizExist,\r\n    setQuizName,\r\n    quizName,\r\n    displayQuiz,\r\n    setDisplayQuiz,\r\n    setQNo,\r\n    setQuizComplete,\r\n    setTempAnswer,\r\n    setTempQuizAnswer,\r\n    setScore,\r\n    quizShareName,\r\n    setQuizShareName,\r\n    quizShareAnswerName,\r\n    setQuizShareAnswerName,\r\n    quizShareResultName,\r\n    setQuizShareResultName,\r\n    quizGiven,\r\n    setQuizGiven,\r\n    userScore,\r\n    setUserScore,\r\n    totalScore,\r\n    setTotalScore,\r\n  } = useStateContext(\"\");\r\n  const handleLogOut = async () => {\r\n    try {\r\n      logOut();\r\n      setProfileExist(true);\r\n      setLogInCheck(false);\r\n      setQuizExist(false);\r\n      setQNo(1);\r\n      setQuiz([]);\r\n      setQuizName(\"\");\r\n      setDisplayQuiz(true);\r\n      setQuizComplete(false);\r\n      setQuizShareName(\"\");\r\n      setQuizShareAnswerName(\"\");\r\n      setQuizShareResultName(\"\");\r\n      setQuizGiven(true);\r\n      setTempQuizAnswer({\r\n        quizAnswer: [],\r\n      });\r\n      setScore(0);\r\n      setError(\"\");\r\n      auth.onAuthStateChanged((user) => {\r\n        if (!user) {\r\n          setLogInCheck(false);\r\n        }\r\n        return;\r\n      });\r\n    } catch {\r\n      setError(\"Failed To LogOut\");\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    let com;\r\n    if (currentUser) {\r\n      com = database.users\r\n        .doc(currentUser.uid)\r\n        .get()\r\n        .then((doc) => {\r\n          if (doc.exists) {\r\n            if (doc.data()) {\r\n              if (doc.data().uid === currentUser.uid) {\r\n              }\r\n            }\r\n            setProfileExist(true);\r\n            return;\r\n          } else {\r\n            setProfileExist(false);\r\n          }\r\n        });\r\n    }\r\n    return com;\r\n  }, []);\r\n  useEffect(() => {\r\n    let com;\r\n    if (currentUser) {\r\n      com = database.quizShare\r\n        .doc(\"quizShare\")\r\n        .get()\r\n        .then((doc) => {\r\n          if (doc.exists) {\r\n            if (doc.data()) {\r\n              setQuizShareName(doc.data().quizShareContainer.quizName);\r\n              setQuizShareAnswerName(\r\n                doc.data().quizShareContainer.quizAnswerName\r\n              );\r\n              setQuizShareResultName(\r\n                doc.data().quizShareContainer.quizResultName\r\n              );\r\n            }\r\n            return;\r\n          } else {\r\n          }\r\n        });\r\n    }\r\n    return com;\r\n  }, [profileExist]);\r\n  useEffect(() => {\r\n    let com;\r\n    if (quizShareName != \"\") {\r\n      if (currentUser) {\r\n        com = database.quizs\r\n          .doc(quizShareName)\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              if (doc.data()) {\r\n                setQuiz(doc.data().quizContainer.quiz);\r\n                setQuizName(doc.data().quizContainer.quizName);\r\n              }\r\n              return;\r\n            } else {\r\n              setQuizExist(false);\r\n            }\r\n          });\r\n      }\r\n    }\r\n    return com;\r\n  }, [quizShareAnswerName]);\r\n  useEffect(() => {\r\n    let com;\r\n    if (quizShareResultName != \"\") {\r\n      if (currentUser) {\r\n        com = database.results\r\n          .doc(quizShareResultName)\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              if (doc.data()) {\r\n                if (\r\n                  doc.data().quizResultContainer.submissions[0] != undefined\r\n                ) {\r\n                  let condition = false;\r\n                  doc.data().quizResultContainer.submissions.forEach((r) => {\r\n                    if (r.uid == currentUser.uid) {\r\n                      condition = true;\r\n                      setUserScore(r.userScore);\r\n                      setTotalScore(r.totalScore);\r\n                    }\r\n                  });\r\n                  if (condition === false) {\r\n                    setQuizExist(true);\r\n                    setQuizGiven(false);\r\n                  } else {\r\n                    setQuizExist(true);\r\n                    setQuizGiven(true);\r\n                  }\r\n                } else {\r\n                  setQuizExist(true);\r\n                  setQuizGiven(false);\r\n                }\r\n              }\r\n              return;\r\n            } else {\r\n            }\r\n          });\r\n      }\r\n    }\r\n    return com;\r\n  }, [quizShareResultName]);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    var validRegex =\r\n      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n    let com;\r\n    if (email.match(validRegex)) {\r\n      if (currentUser) {\r\n        com = database.users\r\n          .doc(currentUser.uid)\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              return;\r\n            } else {\r\n              database.users.doc(currentUser.uid).set({\r\n                fullName: {\r\n                  firstName: firstName,\r\n                  middleName: middleName,\r\n                  lastName: lastName,\r\n                  username: username,\r\n                },\r\n                email: email,\r\n                uid: currentUser.uid,\r\n              });\r\n              setFirstName(\"\");\r\n              setMiddleName(\"\");\r\n              setLastName(\"\");\r\n              setEmail(\"\");\r\n              setProfileExist(true);\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      window.location.reload();\r\n    }\r\n    return com;\r\n  };\r\n  const handleQuizGiven = () => {\r\n    if (quizGiven === false) {\r\n      setDisplayQuiz(false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"logoCon flex justify-center items-center\">\r\n        <img src={logo} alt=\"logo\" />\r\n        <h1>Quiz Time</h1>\r\n      </div>\r\n      <div className=\"subTitle\">\r\n        <h1>Avilable Quizes</h1>\r\n      </div>\r\n      {!profileExist ? (\r\n        <form\r\n          onSubmit={(e) => handleSubmit(e)}\r\n          className=\"formCon flex justify-start items-center flex-col\"\r\n        >\r\n          <div className=\"inputCon\">\r\n            <label>First Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={firstName}\r\n              required\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"inputCon\">\r\n            <label>Middle Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={middleName}\r\n              required\r\n              onChange={(e) => setMiddleName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"inputCon\">\r\n            <label>Last Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={lastName}\r\n              required\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"inputCon\">\r\n            <label>Username:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={username}\r\n              required\r\n              minLength=\"4\"\r\n              maxLength=\"10\"\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"inputCon\">\r\n            <label>Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              required\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Save</button>\r\n        </form>\r\n      ) : (\r\n        displayQuiz &&\r\n        (quizExist ? (\r\n          <div\r\n            className=\"quizPrevCon cursor-pointer flex justify-center items-center w-full flex-col\"\r\n            onClick={() => handleQuizGiven()}\r\n          >\r\n            <div className=\"quizCon flex justify-center items-start flex-col text-center\">\r\n              <h1 className=\"w-full text-center\">Quiz Name: {quizName}</h1>\r\n              {quizGiven ? (\r\n                <div className=\"w-full text-center\">\r\n                  <p className=\"w-full text-center\">\r\n                    You have already submited the quiz\r\n                  </p>\r\n                  <h1 className=\"w-full text-center\">\r\n                    Score: {userScore}/{totalScore}\r\n                  </h1>\r\n                </div>\r\n              ) : (\r\n                <p className=\"w-full text-center\">Click To Start The Quiz</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <h1 className=\"w-full text-center\">\"Quiz are not avilable yet!\"</h1>\r\n        ))\r\n      )}\r\n      {!displayQuiz && <Quiz />}\r\n      <div className=\"logOutCon w-full flex justify-center items-center\">\r\n        <button className=\"\" onClick={handleLogOut}>\r\n          LogOut\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport \"./LogInPage.scss\";\r\nimport logo from \"./media/logoT.svg\";\r\n\r\nexport default function LogIn() {\r\n  const [error, setError] = useState(\"\");\r\n  const { logIn } = useAuth();\r\n\r\n  const handleLogIn = async () => {\r\n    try {\r\n      setError(\"\");\r\n      await logIn();\r\n    } catch {\r\n      setError(\"Failed To Log In\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"welcomePage flex justify-center items-center flex-col\">\r\n        <div className=\"logoCon flex justify-center items-center\">\r\n          <img src={logo} alt=\"logo\" />\r\n          <h1>Quiz Time</h1>\r\n        </div>\r\n        <p className=\"text-center\"></p>\r\n        <div className=\"logInBtnCon flex justify-center items-center font-mono\">\r\n          <button onClick={handleLogIn}>Log In</button>\r\n        </div>\r\n        <p className=\"quoteCon text-center\">\r\n          <span>\"</span>You should know little about a lot<span>\"</span>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useAuth } from '../../context/AuthContext'\r\nimport { useStateContext } from '../../context/StateContext';\r\nimport { auth } from '../../firebase'\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport LogIn from './LogIn';\r\n\r\nexport default function LogInPage() {\r\n    const { currentUser } = useAuth()\r\n    const { logInCheck, setLogInCheck } = useStateContext()\r\n    if (currentUser){\r\n        auth.onAuthStateChanged((user)=>{\r\n            if (user){\r\n                setLogInCheck(true)\r\n            } else if (!user){\r\n                setLogInCheck(false)\r\n            }\r\n            return;\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n          {\r\n              logInCheck ? <Dashboard/> : <LogIn/>\r\n          }  \r\n        </>\r\n    )\r\n}\r\n","import \"./App.scss\";\nimport { AuthProvider } from \"./context/AuthContext\";\nimport LogInPage from \"./components/auth/LogInPage\";\nimport { StateProvider } from \"./context/StateContext\";\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <StateProvider>\n        <LogInPage />\n        <div className=\"borderCon\"></div>\n      </StateProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}